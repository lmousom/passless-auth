version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"  # Main API port
      - "9090:9090"  # Prometheus metrics
    environment:
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - REDIS_POOL_SIZE=10
      - REDIS_MIN_IDLE_CONNS=5
      - REDIS_MAX_RETRIES=3
      - REDIS_KEY_PREFIX="passless:"
      - PASSLESS_SERVER_PORT=8080
      - PASSLESS_SERVER_ENVIRONMENT=development
      - PASSLESS_SERVER_ALLOW_ORIGINS=*
      - PASSLESS_SERVER_READ_TIMEOUT=5s
      - PASSLESS_SERVER_WRITE_TIMEOUT=10s
      - PASSLESS_SERVER_IDLE_TIMEOUT=120s
      - PASSLESS_METRICS_ENABLED=true
      - PASSLESS_METRICS_PORT=9090
      - PASSLESS_METRICS_PATH=/metrics
      - PASSLESS_TRACING_ENABLED=true
      - PASSLESS_TRACING_SERVICE_NAME=passless-auth
      - PASSLESS_TRACING_ENDPOINT=http://otel-collector:4317
      - PASSLESS_ENCRYPTION_KEY=${PASSLESS_ENCRYPTION_KEY}  # Will be set from environment
    volumes:
      - ./config:/app/config
    depends_on:
      - redis
      - otel-collector
    networks:
      - passless-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:8-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - passless-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - passless-network
    depends_on:
      - app

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    networks:
      - passless-network

networks:
  passless-network:
    driver: bridge

volumes:
  redis-data: 